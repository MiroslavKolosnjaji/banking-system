# This config was automatically generated from your source code
# Stacks detected: deps:java:.
version: 2.1
jobs:
  test-java:
    docker:
      - image: cimg/openjdk:17.0
    environment:
      TESTCONTAINERS_HOST_OVERRIDE: "host.docker.internal"
      TESTCONTAINERS_RYUK_DISABLED: "true"
    steps:
      - checkout
      - run:
          name: Calculate cache key
          command: |-
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Configure Maven to use GitHub Packages
          command: |
            mkdir -p ~/.m2
                    echo "<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\">
                      <servers>
                        <server>
                          <id>github</id>
                          <username>miroslavkolosnjaji</username>
                          <password>${GITHUB_TOKEN}</password>
                        </server>
                      </servers>
                    </settings>" > ~/.m2/settings.xml
      - run:
          name: Install dependencies
          command: mvn install
      - run:
          name: Build project
          command: mvn clean compile
      - run:
          name: Package project
          command: mvn package
      - run:
          name: Run tests and generate coverage report
          command: |
            mvn -B test
            mvn jacoco:report
      - run:
          name: Upload Coverage to Codecov
          command: |
            bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN} -f target/site/jacoco/jacoco.xml
      - store_test_results:
          path: target/surefire-reports
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.m2/repository
  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/base:stable
    steps:
      # Replace this with steps to deploy to users
      - run:
          name: deploy
          command: '#e.g. ./deploy.sh'
workflows:
  build-and-test:
    jobs:
      - test-java
    # - deploy:
    #     requires:
    #       - test-java
