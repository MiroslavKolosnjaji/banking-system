version: '3.8'

name: banking-system

services:
  kafka:
      image: bitnami/kafka:latest
      container_name: kafka
      ports:
        - "9093:9093"
      environment:
        - KAFKA_KRAFT_MODE=true
        - KAFKA_CFG_NODE_ID=1
        - KAFKA_KRAFT_CLUSTER_ID=WnLkTHhkQaiJbwP8FClPhw
        - KAFKA_CFG_PROCESS_ROLES=controller,broker
        - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9091
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9093
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9090,EXTERNAL://${HOSTNAME:-localhost}:9093
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
        - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
        - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      networks:
        - banking-network
      healthcheck:
        test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9090 --list || exit 1"]
        interval: 10s
        retries: 5
        start_period: 20s
      restart: always

  kafka-setup:
    image: bitnami/kafka:latest
    container_name: kafka-setup
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command:
      - "kafka-topics --bootstrap-server kafka:9092 -create --topic transaction-created-events --partitions 3 --replication-factor 3"
    networks:
      - banking-network

  eureka-server:
    build:
      context: DiscoveryServer
    ports:
      - "8761:8761"
    environment:
      - eureka.client.register-with-eureka=false
      - eureka.client.fetch-registry=false
    container_name: eureka-server
    networks:
      - banking-network

    restart: on-failure


  api-gateway:
    build:
      context: ApiGateway
    container_name: api-gateway
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - banking-network
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        condition: service_started


  # USER SERVICE
  user-service:
    build:
      context: UserService
    env_file:
      - UserService/.env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/user_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=secret
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - ACCOUNT_SERVICE_URL=http://api-gateway:8080/accountservice
      - TRANSACTION_SERVICE_URL=http://api-gateway:8080/transactionservice
      - SPRING_PROFILES_ACTIVE=prod
    deploy:
      replicas: 2
    depends_on:
      eureka-server:
        condition: service_started
      api-gateway:
        condition: service_started
      user-db:
        condition: service_started
    networks:
      - banking-network
    restart: on-failure

  user-db:
    image: postgres:latest
    container_name: user-db
    ports:
      - "5431:5432"
    networks:
      - banking-network
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret

  # ACCOUNT SERVICE
  account-service:
    build:
      context: AccountService
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://account-db:5432/account_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=secret
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=prod
    deploy:
      replicas: 2
    depends_on:
      eureka-server:
        condition: service_started
      api-gateway:
        condition: service_started
      account-db:
        condition: service_started
    networks:
      - banking-network
    restart: on-failure

  account-db:
    image: postgres:latest
    container_name: account-db
    ports:
      - "5432:5432"
    networks:
      - banking-network
    environment:
      POSTGRES_DB: account_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret

  # TRANSACTION SERVICE
  transaction-service:
    build:
      context: TransactionService
    environment:
      - KAFKA_SERVERS_URL=kafka:9090
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - ACCOUNT_SERVICE_URL=http://api-gateway:8080/accountservice
      - USER_SERVICE_URL=http://api-gateway:8080/userservice
      - SPRING_DATASOURCE_URL=jdbc:postgresql://transaction-db:5432/transaction_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=secret
      - SPRING_PROFILES_ACTIVE=prod
    deploy:
      replicas: 2
    depends_on:
      kafka:
        condition: service_healthy
      eureka-server:
        condition: service_started
      api-gateway:
        condition: service_started
      transaction-db:
        condition: service_started
    networks:
      - banking-network
    restart: on-failure

  transaction-db:
    image: postgres:latest
    container_name: transaction-db
    ports:
      - "5433:5432"
    networks:
      - banking-network
    environment:
      POSTGRES_DB: transaction_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret

  # NOTIFICATION SERVICE
  notification-service:
    build:
      context: NotificationService
    deploy:
      replicas: 2
    depends_on:
      kafka:
        condition: service_healthy
      notification-db:
        condition: service_started
    networks:
      - banking-network
    environment:
      - KAFKA_SERVERS_URL=kafka:9090
      - KAFKA_GROUP_ID=transaction-created-events
      - KAFKA_TOPIC_NAME=transaction-created-events-topic
      - MONGODB_URL=mongodb://admin:secret@notification-db:27017/notification_db?authSource=admin
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=secret
      - MONGODB_DATABASE=notification_db
      - SPRING_PROFILES_ACTIVE=prod
      - YOUR_USERNAME=yourEmail@gmail.com
      - YOUR_PASSWORD=yourPassword

  notification-db:
    image: mongo:latest
    container_name: notification-db
    ports:
      - "27017:27017"
    networks:
      - banking-network
    environment:
      MONGO_INITDB_DATABASE: notification_db
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secret


networks:
  banking-network:
    driver: bridge

#    If you want to user .env file from the project, you must it call explicitly:    env_file:
#                                                                                      - .env